a
a
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
a <- as.numeric(mapThisPov['Year'][1:nrow(mapThisPov['Year']),])
a <- unique(a)
a
head(mapThisPov)
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(newPov$Name)
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
a <- as.numeric(mapThisPov['Year'][1:nrow(mapThisPov['Year']),])
a <- unique(a)
a
class(a)
a[1:4]
class(a[1])
unlist(a)
b <- unlist(a)
b
class()
class(b)
b[]
b[3]
b <- list(b)
class(b)
runApp()
runApp()
runApp()
runApp()
View(cycle)
cycle
class(cycle)
cycle$``
View(cycle)
cycle[1]
cycle[3]
cycle[[3]]
cycle[[90]]
cycle[90]
cycle$ind[1]
cycle$ind[5]
cycle
cycle[1:84]
cycle[1:85]
cycle[1:86]
cycle[1:80]
cycle[1:90]
cycle[1:89]
cycle[1:87]
cycle[1:88]
cycle[1:87]
runApp()
cycle[4]
cycle[cycle[4]]
cycle[cycle[4],]
class(cycle)
cycle[[2]]
cycle <- colnames(mapThis)[8:94]
cycle
runApp()
mapThis[2011-20]
mapThis[2011-10]
mapThis[2011-10,]
mapThis[,2011-10]
cycle
mapThis$cycle[2]
cycle[]
cycle[1]
c <- cycle[1]
mapThis$c
mapThis[3]
mapThis[cycle[2]]
cycle$ind <- seq(1:length(cycle))
runApp()
cycle
cycle[[2]]
mapThis['2010-12']
runApp()
runApp()
cycle
cycle <- colnames(mapThis)[8:94]
library('httr')
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library("RColorBrewer")
library('jsonlite')
rent <- fread('State_Zri_MultiFamilyResidenceRental.csv', stringsAsFactors = F)
usa <- map_data('usa')
# map 50
data("fifty_states") # this line is optional due to lazy data loading
states <- data.frame(state.abb, state.name)
colnames(states) <- c('abb', 'RegionName')
byState <- select(rent, colnames(rent)[c(2,4:length(colnames(rent)))])
new <- left_join(byState, states)
new <- new[!duplicated(new$abb)]
new$RegionName <- tolower(new$RegionName)
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "RegionName",    "group")
mapThis <- left_join(fifty_states, new, by = 'RegionName')
cycle <- colnames(mapThis)[8:94]
#cycle$ind <- seq(1:length(cycle))
colors <- mapThis[8:94]
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "RegionName",    "group")
mapThis <- left_join(fifty_states, new, by = 'RegionName')
cycle <- colnames(mapThis)[8:94]
cycle
runApp()
mapThis['2010-10']
mapThis['2010-12']
head(mapThis['2010-12'])
cyce
cycl
cycle
mapThis[cycle[1]]
mapThis[cycle[13]]
mapThis["201"]
mapThis["2019"]
mapThis["2019",]
mapThis[,"2019"]
mapThis[,2016]
mapThis[,2016-10]
mapThis[2016-10]
mapThis[2011-12]
mapThis[2011-12,]
mapThis[,2011-12]
mapThis[,'2011-12']
runApp()
length(cycle)
runApp()
runApp()
cycle[5]
mapThis[cycle[5]]
runApp()
cycle$ind <- seq(1:length(cycle))
runApp()
cycle
cycle[[4]]
mapThis['2011-02']
runApp()
cycle <- colnames(mapThis)[8:94]
cycle[2]
mapThis['2010-12']
runApp()
mapThis['2010-12',]
mapThis[,'2010-12']
runApp()
mapThis[2012-10]
mapThis[,2012-10]
mapThis[2012-10,]
length(cycle)
ind <- seq(1:87)
cycle <- rbind(ind, cycle)
cycle
head(cycle)
class(cycle)
cycle <- data.frame(ind, cycle)
cycle <- colnames(mapThis)[8:94]
ind <- seq(1:87)
cycle <- data.frame(ind, cycle)
head(cycle)
cycle$ind
runApp()
runApp()
runApp()
runApp()
library('httr')
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library('jsonlite')
library("RColorBrewer")
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(newPov$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
a <- as.numeric(mapThisPov['Year'][1:nrow(mapThisPov['Year']),])
a <- unique(a)
# Define UI for application that draws map for various data
shinyUI(navbarPage(
# Application title
"State Level Rent/Poverty Data Project",
#INTRO TO PROJECT SECTION
tabPanel("Introduction",
h3('	According to our data, rent rates and poverty levels tend to correlate inversely for each state. This means that where rent rates are higher, poverty rates tend to be lower.  We have found that this correlation between Zillow rent rates and poverty levels is statistically significant for most states. This is based off a significance level of .005. '),
includeHTML("intro.html")
),
#ABOUT US SECTION
navbarMenu("About us!",
#each subtab will contain some information and a relevant image about team member
tabPanel("Mimi Du",
h1("I'm Mimi Du", align = "center"),
p("I'm a senior at UW studying applied math! Specifically scientific computing & numerical analysis.", align = "center"),
p("I have no idea what I'm going to end up doing after graduation...", align = "center"),
p("But aside from doing math all day I love to bake and watch SVU marathons on TV!", align = "center"),
HTML('<center><img src="https://upload.wikimedia.org/wikipedia/commons/c/cf/SVUopening.jpg" width="300" height="300" alt="SVU titlecard"</img></center>')),
tabPanel("Robi Lin",
h1("I'm Robi Lin", align = "center"),
p("Imma sophomore at UW and I'm studying philosophy, informatics, and economics.", align = "center"),
p("I hope to one day work on systematic issues that cause oppression on living things.", align = "center"),
p("I enjoy rock climbing and watching movies and just kicking it real talk boy.", align = "center"),
HTML('<center><img src="https://outdoordesignbylucas.files.wordpress.com/2011/01/1-10-11-charcter-rocks.jpg" width="300" height="300" alt="This is a rock"</img></center>')),
tabPanel("Marc Punio",
h1("I'm Marc Punio", align = "center"),
p("I'm a sophomore, Iâ€™m in informatics thinking about minoring in business.", align = "center"),
p("I love technology and having fun and one day I hope to be able to help the world through technology.", align = "center"),
p("Some of my hobbies are playing basketball, hanging out with friends, going to the gym, etc.", align = "center"),
HTML('<center><img src="http://blogs.nbc12.com/.a/6a016766efbf6d970b01bb0979375a970d-pi" width="300" height="300" alt="This is a rock"</img></center>')),
tabPanel("Simon Lau",
h1("I'm Simon Lau", align = "center"),
p("I'm a junior at UW Seattle.", align = "center"),
p("An intesting fact about me is that I'm a geography major.", align = "center"),
p("I am also a self-proclaimed caffeine addict with no real hobbies!", align = "center"),
HTML('<center><img src="https://jennyyozimmermann.files.wordpress.com/2014/11/coffee-addict-dude-7-to-wake-up.png" width="300" height="300" alt="This is a rock"</img></center>'))),
#RENT RATE PER STATE VISUALIZATION SECTION
tabPanel("Rent Rates",
# Sidebar with a slider input
sidebarLayout(
sidebarPanel(
#Select Input for cereal data to be plotted
selectInput("slider1", label = h3("By month from 2010 - 2018"), choices = cycle$cycle)
#sliderInput("slider1", label = h3("By year from 1989 - 2016"), min = a[1],
#   max = a[length(a)], value = 1989)
#  selectInput("data", "Select Data",
# choices = c('Zillow Housing Prices', 'Poverty Estimates')
),
mainPanel(
p("The following visualization displays the median Zillow Rent Index score for each state in the United States."),
p("The lighter the color, the higher the median rent rate!"),
p("Move the slider on the right to change the year of the data."),
plotOutput("rentPlot")
)
)
),
#POVERTY RATE BY STATE VISUALIZATION SECTION
tabPanel("Poverty Rates by Year",
# Sidebar with a slider input
sidebarLayout(
sidebarPanel(
#Select Input for cereal data to be plotted
selectInput("slider2", label = h3("Year of data"), choices = a)
#sliderInput("slider1", label = h3("By year from 1989 - 2016"), min = a[1],
#   max = a[length(a)], value = 1989)
#  selectInput("data", "Select Data",
# choices = c('Zillow Housing Prices', 'Poverty Estimates')
),
mainPanel(
p("The following visualization displays the poverty level for each state in the United States."),
p("The lighter the color, the higher the poverty rate!"),
p("Move the slider on the right to change the year of the data."),
plotOutput("povertyPlot")
)
)
),
#LOOKING AT THE CORRELATIONS BETWEEN POVERTY AND RENT SECTION
tabPanel("Findings",
titlePanel("Correlation Between Poverty and Rent Rates"),
sidebarLayout(
sidebarPanel(
radioButtons("selectData", "Dataset", list("Poverty Estimates", "Rent Rates", "Correlation Dataset") ),
includeMarkdown("correlation.md")
),
mainPanel(
textOutput("text"),
tableOutput("dataTable")
)
)
)
)
)
runApp()
rent <- fread('State_Zri_MultiFamilyResidenceRental.csv', stringsAsFactors = F)
usa <- map_data('usa')
# map 50
data("fifty_states") # this line is optional due to lazy data loading
states <- data.frame(state.abb, state.name)
colnames(states) <- c('abb', 'RegionName')
byState <- select(rent, colnames(rent)[c(2,4:length(colnames(rent)))])
new <- left_join(byState, states)
new <- new[!duplicated(new$abb)]
new$RegionName <- tolower(new$RegionName)
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "RegionName",    "group")
mapThis <- left_join(fifty_states, new, by = 'RegionName')
cycle <- colnames(mapThis)[8:94]
ind <- seq(1:87)
cycle <- data.frame(ind, cycle)
colors <- mapThis[8:94]
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "RegionName",    "group")
mapThis <- left_join(fifty_states, new, by = 'RegionName')
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(newPov$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
a <- as.numeric(mapThisPov['Year'][1:nrow(mapThisPov['Year']),])
a <- unique(a)
# Define UI for application that draws map for various data
shinyUI(navbarPage(
# Application title
"State Level Rent/Poverty Data Project",
#INTRO TO PROJECT SECTION
tabPanel("Introduction",
h3('	According to our data, rent rates and poverty levels tend to correlate inversely for each state. This means that where rent rates are higher, poverty rates tend to be lower.  We have found that this correlation between Zillow rent rates and poverty levels is statistically significant for most states. This is based off a significance level of .005. '),
includeHTML("intro.html")
),
#ABOUT US SECTION
navbarMenu("About us!",
#each subtab will contain some information and a relevant image about team member
tabPanel("Mimi Du",
h1("I'm Mimi Du", align = "center"),
p("I'm a senior at UW studying applied math! Specifically scientific computing & numerical analysis.", align = "center"),
p("I have no idea what I'm going to end up doing after graduation...", align = "center"),
p("But aside from doing math all day I love to bake and watch SVU marathons on TV!", align = "center"),
HTML('<center><img src="https://upload.wikimedia.org/wikipedia/commons/c/cf/SVUopening.jpg" width="300" height="300" alt="SVU titlecard"</img></center>')),
tabPanel("Robi Lin",
h1("I'm Robi Lin", align = "center"),
p("Imma sophomore at UW and I'm studying philosophy, informatics, and economics.", align = "center"),
p("I hope to one day work on systematic issues that cause oppression on living things.", align = "center"),
p("I enjoy rock climbing and watching movies and just kicking it real talk boy.", align = "center"),
HTML('<center><img src="https://outdoordesignbylucas.files.wordpress.com/2011/01/1-10-11-charcter-rocks.jpg" width="300" height="300" alt="This is a rock"</img></center>')),
tabPanel("Marc Punio",
h1("I'm Marc Punio", align = "center"),
p("I'm a sophomore, Iâ€™m in informatics thinking about minoring in business.", align = "center"),
p("I love technology and having fun and one day I hope to be able to help the world through technology.", align = "center"),
p("Some of my hobbies are playing basketball, hanging out with friends, going to the gym, etc.", align = "center"),
HTML('<center><img src="http://blogs.nbc12.com/.a/6a016766efbf6d970b01bb0979375a970d-pi" width="300" height="300" alt="This is a rock"</img></center>')),
tabPanel("Simon Lau",
h1("I'm Simon Lau", align = "center"),
p("I'm a junior at UW Seattle.", align = "center"),
p("An intesting fact about me is that I'm a geography major.", align = "center"),
p("I am also a self-proclaimed caffeine addict with no real hobbies!", align = "center"),
HTML('<center><img src="https://jennyyozimmermann.files.wordpress.com/2014/11/coffee-addict-dude-7-to-wake-up.png" width="300" height="300" alt="This is a rock"</img></center>'))),
#RENT RATE PER STATE VISUALIZATION SECTION
tabPanel("Rent Rates",
# Sidebar with a slider input
sidebarLayout(
sidebarPanel(
#Select Input for cereal data to be plotted
selectInput("slider1", label = h3("By month from 2010 - 2018"), choices = cycle$cycle)
#sliderInput("slider1", label = h3("By year from 1989 - 2016"), min = a[1],
#   max = a[length(a)], value = 1989)
#  selectInput("data", "Select Data",
# choices = c('Zillow Housing Prices', 'Poverty Estimates')
),
mainPanel(
p("The following visualization displays the median Zillow Rent Index score for each state in the United States."),
p("The lighter the color, the higher the median rent rate!"),
p("Move the slider on the right to change the year of the data."),
plotOutput("rentPlot")
)
)
),
#POVERTY RATE BY STATE VISUALIZATION SECTION
tabPanel("Poverty Rates by Year",
# Sidebar with a slider input
sidebarLayout(
sidebarPanel(
#Select Input for cereal data to be plotted
selectInput("slider2", label = h3("Year of data"), choices = a)
#sliderInput("slider1", label = h3("By year from 1989 - 2016"), min = a[1],
#   max = a[length(a)], value = 1989)
#  selectInput("data", "Select Data",
# choices = c('Zillow Housing Prices', 'Poverty Estimates')
),
mainPanel(
p("The following visualization displays the poverty level for each state in the United States."),
p("The lighter the color, the higher the poverty rate!"),
p("Move the slider on the right to change the year of the data."),
plotOutput("povertyPlot")
)
)
),
#LOOKING AT THE CORRELATIONS BETWEEN POVERTY AND RENT SECTION
tabPanel("Findings",
titlePanel("Correlation Between Poverty and Rent Rates"),
sidebarLayout(
sidebarPanel(
radioButtons("selectData", "Dataset", list("Poverty Estimates", "Rent Rates", "Correlation Dataset") ),
includeMarkdown("correlation.md")
),
mainPanel(
textOutput("text"),
tableOutput("dataTable")
)
)
)
)
)
# Don't delete this
source("load-viz-one.R")
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(newPov$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
print(mapThisPov)
a <- as.numeric(mapThisPov['Year'][1:nrow(mapThisPov['Year']),])
a <- unique(a)
a <- as.numeric(mapThisPov['Year'][1:nrow(mapThisPov['Year']),])
a <- unique(a)
correl <- read.csv("CorrelationSig.csv")
newnewpov <- read.csv("PovDataNew.csv", header = F)
colnames(newnewpov) <- as.character(newnewpov[1,])
newnewpov <- newnewpov[-1,]
colnames(newnewpov)[1] <- "Name"
# Define server logic for choosing value to plot
shinyServer(function(input, output) {
output$povertyPlot <- renderPlot({
mapThisPov <- filter(mapThisPov, Year == input$slider2)
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + labs(title = paste("Poverty level by state in", input$slider2))
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate))) + coord_fixed(1.3) + labs(title = paste("Poverty level by state in", input$slider2)) + guides(fill=guide_legend("Poverty Rates (%)"))
})
output$rentPlot <- renderPlot({
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = mapThis[,input$slider1])) + coord_fixed(1.3) + labs(title = paste("Rent level by state", cycle[[input$slider1]])) + guides(fill=guide_legend("Average Rents ($)"))
})
output$dataTable <- renderTable({
if (input$selectData == "Poverty Estimates") {
dataset <- newnewpov
} else if (input$selectData == "Correlation Dataset") {
dataset <- correl
dataset <- select(dataset, -X)
} else {
dataset <- rent[,2:90]
dataset <- select(dataset, -SizeRank)
}
return (dataset)
}, bordered = TRUE, hover = TRUE, striped = TRUE)
output$text <- renderText({
if (input$selectData == "Correlation Dataset") {
x <- "According to our data, rent rates and poverty levels tend to correlate inversely for each state. This means that where rent rates are higher, poverty rates tend to be lower. Perhaps this is because where there is less poverty more people are able to afford more costly rent, therefore landlords would charge higher rates.
We have found that this correlation between Zillow rent rates and poverty levels is statistically significant for the following states:
Arizona, California, Florida, Georgia, Hawaii, Idaho, Indiana, Iowa, Kentucky, Maine, Michigan, Mississippi, Montana, Nevada, New Hampshire, North Carolina, Ohio    , Oklahoma, Oregon, Pennsylvania, South Carolina, Tennessee, Texas, Utah, Washington, Wisconsin, and Wyoming.
This is based off a significance level of .005."
return (x)
}
})
})
runApp()
runApp()
# Don't delete this
source("load-viz-one.R")
runApp()
runApp()
runApp()
runApp()
library(rmarkdown)
runApp()
