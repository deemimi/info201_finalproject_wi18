new$Name <- tolower(new$Name)
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThis <- left_join(fifty_states, new, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
head(a)
tail(a)
min(a)
max()
max(a)
length(a)
unique(a)
a <- unique(a)
a
a[1]
runApp()
mapThis['Year'][1]
a
a[1]
runApp()
runApp()
mapThis <- left_join(fifty_states, new, by = 'Name')
library('httr')
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library("RColorBrewer")
setwd("~/Desktop/info_final/byState")
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byState <- select(povData, Name, Estimate, Year, state.name)
new <- left_join(byState, states)
new = subset(new, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThis <- left_join(fifty_states, new, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- unique(a)
source('rentCostByState.R', local = T)
# Define server logic for choosing value to plot
shinyServer(function(input, output) {
output$valuePlot <- renderPlot({
mapThis <- filter(mapThis, Year == a[input$slider1])
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Zillow Rent Prices per state per year')
})
})
runApp()
head(mapThis)
byState <- select(povData, Name, Estimate, Year, state.name)
byState
new = subset(new, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
runApp()
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library('jsonlite')
library("RColorBrewer")
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byState <- select(povData, Name, Estimate, Year, state.name)
new <- left_join(byState, states)
new = subset(new, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThis <- left_join(fifty_states, new, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- unique(a)
mapThis <- filter(mapThis, Year == )
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
head(mapThis)
mapThis <- filter(mapThis, Year == 2016)
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
mapThis <- filter(mapThis, Year == 1989)
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
mapThis <- filter(mapThis, Year == 1989)
mapThis <- filter(mapThis, Year == 2016)
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library('jsonlite')
library("RColorBrewer")
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byState <- select(povData, Name, Estimate, Year, state.name)
new <- left_join(byState, states)
new = subset(new, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThis <- left_join(fifty_states, new, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- unique(a)
mapThis <- filter(mapThis, Year == 2016)
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library('jsonlite')
library("RColorBrewer")
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byState <- select(povData, Name, Estimate, Year, state.name)
new <- left_join(byState, states)
new = subset(new, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThis <- left_join(fifty_states, new, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- unique(a)
mapThis <- filter(mapThis, Year == 1989)
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
mapThis <- filter(mapThis, Year == 2016)
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library('jsonlite')
library("RColorBrewer")
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- unique(a)
mapThisPov <- filter(mapThis, Year == 2016)
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
head(mapThisPov)
head(newPov)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
new$Name <- tolower(new$Name)
head(new)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
head(mapThisPov)
newPov = subset(newPov, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(newPov, fifty_states, by = 'Name')
head(mapThisPov)
mapThisPov <- join(fifty_states, newPov, by = 'Name')
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
new$Name <- tolower(new$Name)
head(newPov)
head(fifty_states)
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
head(fifty_states)
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
head(mapThisPov)
#prep map
data('fifty_states')
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
new$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
head(newPov)
head(fifty_states)
new$Name <- tolower(new$Name)
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library('jsonlite')
library("RColorBrewer")
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- unique(a)
mapThisPov <- filter(mapThis, Year == 2016)
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
head(mapThisPov)
#prep data
states <- data.frame(state.abb, state.name)
povData <- povData[-1,]
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(new$Name)
head(newPov)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
head(fifty_states)
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
head(mapThisPov)
mapThisPov <- filter(mapThis, Year == 2016)
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
setwd("~/Desktop/info_final/byState")
rent <- fread('State_Zri_MultiFamilyResidenceRental.csv', stringsAsFactors = F)
usa <- map_data('usa')
# map 50
data("fifty_states") # this line is optional due to lazy data loading
states <- data.frame(state.abb, state.name)
colnames(states) <- c('abb', 'RegionName')
byState <- select(rent, colnames(rent)[c(2,4:length(colnames(rent)))])
new <- left_join(byState, states)
new <- new[!duplicated(new$abb)]
new$RegionName <- tolower(new$RegionName)
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "RegionName",    "group")
mapThis <- left_join(fifty_states, new, by = 'RegionName')
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Zillow Rent Prices per state per year')
head(mapThis)
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = 2016-05) + coord_fixed(1.3) + ggtitle('Zillow Rent Prices per state per year')
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = 2016-05)) + coord_fixed(1.3) + ggtitle('Zillow Rent Prices per state per year')
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = 2016-05)) + coord_fixed(1.3) + ggtitle('Zillow Rent Prices per state per year')
head(cycle)
head(mapThis)
cycle[1]
mapThis[cycle[1]]
mapThis[cycle[1],]
mapThis["2010-11"]
mapThis[cycle[1]]
cycle[1]
class(cycle[1])
cycle[1][1]
class(cycle[1][1])
cycle[1]
cycle[1,]
cycle[,1]
cycle[[1]]
head(mapThis)
mapThis[cycle[[1]]]
#mapThis <- filter(mapThis, Year == a[input$slider1])
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = mapThis[cycle[[input$slider1]]])) + coord_fixed(1.3) + ggtitle('Zillow Rent Prices per state per year')
runApp()
setwd("~/Desktop/info_final/byState")
rent <- fread('State_Zri_MultiFamilyResidenceRental.csv', stringsAsFactors = F)
usa <- map_data('usa')
# map 50
data("fifty_states") # this line is optional due to lazy data loading
states <- data.frame(state.abb, state.name)
colnames(states) <- c('abb', 'RegionName')
byState <- select(rent, colnames(rent)[c(2,4:length(colnames(rent)))])
library('httr')
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library("RColorBrewer")
setwd("~/Desktop/info_final/byState")
rent <- fread('State_Zri_MultiFamilyResidenceRental.csv', stringsAsFactors = F)
usa <- map_data('usa')
# map 50
data("fifty_states") # this line is optional due to lazy data loading
states <- data.frame(state.abb, state.name)
colnames(states) <- c('abb', 'RegionName')
byState <- select(rent, colnames(rent)[c(2,4:length(colnames(rent)))])
head(byState)
new <- left_join(byState, states)
new <- new[!duplicated(new$abb)]
new$RegionName <- tolower(new$RegionName)
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "RegionName",    "group")
mapThis <- left_join(fifty_states, new, by = 'RegionName')
head(mapThis)
cycle <- colnames(mapThis)[8:94]
cycle$ind <- seq(1:length(cycle))
colors <- mapThis[8:94]
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThis <- left_join(fifty_states, new, by = 'Name')
head(fifty_states)
head(new)
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "RegionName",    "group")
mapThis <- left_join(fifty_states, new, by = 'Name')
mapThis <- left_join(fifty_states, new, by = 'RegionName')
head(mapThis)
#mapThis <- filter(mapThis, Year == a[input$slider1])
ggplot(mapThis, aes(long, lat)) + geom_polygon(aes(group = group, fill = mapThis[cycle[[input$slider1]]])) + coord_fixed(1.3) + ggtitle('Zillow Rent Prices per state per year')
runApp()
library('dplyr')
library('mapproj')
library('ggplot2')
library('namespace')
library('fiftystater')
library('maptools')
library('maps')
library('data.table')
library('jsonlite')
library("RColorBrewer")
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(new$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- unique(a)
mapThisPov <- filter(mapThis, Year == 2016)
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
#Get the Pov Data
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
#prep data
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
head(byStatePov)
newPov <- left_join(byStatePov, states)
head(newPov)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(new$Name)
head(newPov)
newPov$Name <- tolower(newPov$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
head(mapThisPov)
a <- as.numeric(mapThis['Year'][1:nrow(mapThis['Year']),])
a <- as.numeric(mapThisPov['Year'][1:nrow(mapThisPov['Year']),])
head(a)
a <- unique(a)
a
a[1]
mapThisPov <- filter(mapThis, Year == a[1])
mapThisPov <- filter(mapThisPov, Year == a[1])
head(mapThisPov)
ggplot(mapThisPov, aes(long, lat)) + geom_polygon(aes(group = group, fill = as.numeric(Estimate)*10)) + coord_fixed(1.3) + ggtitle('Poverty Levels by state per year')
a[1]
runApp('~/Desktop/info_final/pov')
View(mapThisPov)
runApp('~/Desktop/info_final/pov')
filter(mapThisPov, Year == 1994)
filter(mapThisPov, Year == 1995)
filter(mapThisPov, Year == 1996)
filter(mapThisPov, Year == 1990)
filter(mapThisPov, Year == 2016)
colnames(mapThisPov)
mapThisPov[Year,]
mapThisPov[,Year]
mapThisPov[Year]
mapThisPov['Year']
filter(mapThisPov, 'Year' == 2016)
filter(mapThisPov, 'Year' == 2010)
mapThisPov %>% filter(Year = 1989)
mapThisPov %>% filter(Year == 1989)
mapThisPov %>% filter(Year == 1994)
mapThisPov %>% filter(Year == 1995)
mapThisPov %>% filter(Year == 1989)
mapThisPov %>% filter(Year == 1990)
mapThisPov %>% filter(Year == 1991)
mapThisPov %>% filter(Year == 1992)
unique(mapThisPov$Year)
runApp('~/Desktop/info_final/pov')
head(mapThisPov)
runApp('~/Desktop/info_final/pov')
url <- 'https://api.census.gov/data/timeseries/poverty/saipe?get=NAME,SAEPOVRTALL_LB90,SAEPOVRTALL_MOE,SAEPOVRTALL_PT,SAEPOVRTALL_UB90&for=state:*&time=from+1980'
response <- GET(url)
body <- content(response, 'text')
povData <- data.frame(fromJSON(body), stringsAsFactors = F)
colnames(povData) <- c('Name', "LowerBound", 'MarginOfError', 'Estimate', 'UpperBound', 'Year', 'state.name')
povData <- povData[-1,]
states <- data.frame(state.abb, state.name)
byStatePov <- select(povData, Name, Estimate, Year, state.name)
newPov <- left_join(byStatePov, states)
newPov = subset(newPov, select = -c(state.abb) )
newPov$Name <- tolower(newPov$Name)
#prep map
data('fifty_states')
colnames(fifty_states) <- c("long",  "lat"   ,"order" ,"hole",  "piece", "Name",    "group")
mapThisPov <- left_join(fifty_states, newPov, by = 'Name')
unique(mapThisPov$Year)
runApp('~/Desktop/info_final/pov')
runApp('~/Desktop/info_final/pov')
runApp()
library(rsconnect)
rsconnect::deployApp('~/Desktop/info_final/pov')
library(rsconnect)
rsconnect::deployApp('~/Desktop/info_final/pov')
runApp('~/Desktop/info_final/pov')
library(rsconnect)
rsconnect::deployApp(appDir = '~/Desktop/info_final/pov', appName = pov)
runApp('~/Desktop/info_final/pov')
